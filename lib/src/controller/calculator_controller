import 'package:get/get.dart';

enum Calculate {PLUS, MINUS, MULTIPLY, DIVIDE, NONE}

class CalculatorController extends GetxController {
    RxString _result = '0'.obs;
    num num1 = 0; // 연산 버튼이 눌리기 전 숫자
    num num2 = 0; // 연산 버튼이 눌린 후 숫자
    Calculate status = Calculate.NONE; // 초기 상태
// 애니메이션을 위한 불리언 변수 추가
    bool pushCalculateBtn = false; // num1과 num2를 구분하는 경계
    Rxbool _pushPlus = false.obs;
    Rxbool _pushMinus = false.obs;
    Rxbool _pushMultiply = false.obs;
    Rxbool _pushDivide = false.obs;

    String get result => _result.value;

// getter 추가
    bool get plus => _pushPlus.value;
    bool get minus => _pushMinus.value;
    bool get multiply => _pushMultiply.value;
    bool get divide => _pushDivide.value;

// 초기화
  void allClear() {
    initPushCalculateStatus(); // 연산 버튼 변수들 초기화
    initResultNumber(); // 결과값 초기화
    num1 = 0;
    num2 = 0;
    status = Calculate.NONE;
  }

  void initResultNumber() {
    _result.value = 0;
  }

  void initPushCalculateStatus() {
    _pushPlus.value = false;
    _pushMinus.value = false;
    _pushMultiply.value = false;
    _pushDivide.value = false;
  }
// 초기의 결과창은 0, 숫자가 입력되면 결과값이 0에서 숫자로 대체, 그 이후에는 오른쪽에 하나씩 숫자가 더해짐
// 숫자 입력
    void pushNumberBtn(String value) {
      if (pushCalculateBtn) {
        // 연산 버튼이 눌렸다면,
        initResultNumber();
        initPushCalculateStatus();
        pushCalculatBtn = false; // 연산 버튼이 눌리지 않았음을 명시.
      }

        if(_result.value[0] == '0' && _result.value.length == 1) {
            _result.value = '';
        }
        _result.value += value;
    }

  void pushCalculateBtnProgress(Calculate type) {
    num1 = num.parse(_result.value);
    initPushCalculateStatus();

    switch(type) {
      case Calculate.PLUS:
        _pushPlus.value = true;
        break;
      case Calculate.MINUS:
        _pushMinus.value = true;
        break;
      case Calculate.MULTIPLY:
        _pushMultiply.value = true;
        break;
      case Calculate.DIVIDE:
        _pushDivide.value = true;
        break;
      case Calculate.NONE;
        break;
    }
    pushCalculateBtn = true; // num1과 num2를 구분하는 변수
  }

  void pushPlusBtn() {
    status = Calculate.PLUS;
    pushCalculateBtnProgress(status);
    print(status);
    print(_pushPlus);
  }

   void pushMinusBtn() {
    status = Calculate.MINUS;
    pushCalculateBtnProgress(status);
    print(status);
    print(_pushMinus);
  }

   void pushMultiplyBtn() {
    status = Calculate.MULTIPLY;
    pushCalculateBtnProgress(status);
    print(status);
    print(_pushMultiply);
  }

   void pushDivideBtn() {
    status = Calculate.DIVIDE;
    pushCalculateBtnProgress(status);
    print(status);
    print(_pushDivide);
  }


// 소수점 입력하면, 점이 찍히지만 이미 찍혔다면 찍히지 말아야함
    void pushDotBtn() {
        if (_result.value.contains('.')) {
            return;
        }
        _result.value += '.';
    }

// 백분율 버튼
  void changeToPercent() {
    _result.value = (num.parse(_result.value) / 100).toString();
  }

  void calculate() {
    num2 = num.parse(_result.value); // 결과창의 숫자는 num2
    switch (status) {
      // 현재 연산의 종류 확인 후 연산
      case Calculate.PLUS;
        _result.value = (num1 + num2).toString();
        break;
      case Calculate.MINUS;
        _result.value = (num1 - num2).toString();
        break;
      case Calculate.MULTIPLY;
        _result.value = (num1 * num2).toString();
        break;
      case Calculate.DIVIDE;
        if (num2 == 0) {
          // 0으로 나누면 오류 표시
          _result.value = '오류';
          return;
        }
        _result.value = (num1 / num2).toString();
        break;
      case Calculate.NONE; // 초기에는 아무런 효과가 없음
        break;
    }
    print(_result.value);
  }

// 부호 바꾸기
  void convert() {
    _result.value = (num.parse(_result.value) * -1).toString();
  }

  void remove(DragUpdateDetails details) {
    print('스와이프');
    if (_result.value.length > 1 && _result.value != '0') {
      _result.value = _result.value.substring(0, _result.value.length -1);
      return;
    }

    if (_result.value.length == 1 && _result.value != '0') {
      initResultNumber();
      return;
    }
  }



}